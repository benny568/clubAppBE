app.name=backend
app.description=${app.name} is a Sporting Club Admin and information website application.

# The port the app will listen on
server.port=8081

security.user.name=benny
security.user.password=corina

# LOGGING
#logging.config=logback-spring.xml
#logging.path="/home/odalybr/devlogs"
#logging.file="clubApp.log"

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url=jdbc:mysql://mysql1001.mochahost.com:3306/odalybr_register

# Username and secret
spring.datasource.username=odalybr_root
spring.datasource.password=Merr10nAvenue83

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# SPRING MVC (WebMvcProperties)
spring.mvc.date-format=`dd/MM/yyyy`
spring.mvc.favicon.enabled=true
spring.mvc.servlet.load-on-startup= 1
spring.mvc.static-path-pattern=/**
spring.mvc.view.prefix= '/'
spring.mvc.view.suffix= '.html'

# SPRING RESOURCES HANDLING (ResourceProperties)
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/assets/

